{"ast":null,"code":"import * as signalR from \"@microsoft/signalr\";\nconst connection = new signalR.HubConnectionBuilder().withUrl(\"https://localhost:5001/terminalhub\").build();\nconst signalRService = {\n  startConnection: async () => {\n    try {\n      if (connection.state === signalR.HubConnectionState.Disconnected) {\n        await connection.start();\n        console.log(\"Connected to SignalR hub\");\n      } else {\n        console.log(\"SignalR connection is already in progress or Server not running.\");\n      }\n    } catch (error) {\n      console.error(\"Error connecting to SignalR hub:\", error);\n    }\n  },\n  addFlightReceivedListener: callback => {\n    connection.on(\"flightReceived\", callback);\n  },\n  addFlightRemoveListener: callback => {\n    connection.on(\"flightRemove\", callback);\n  },\n  addFlightMoveListener: callback => {\n    connection.on(\"flightMoove\", callback);\n  }\n};\nexport default signalRService;","map":{"version":3,"names":["signalR","connection","HubConnectionBuilder","withUrl","build","signalRService","startConnection","state","HubConnectionState","Disconnected","start","console","log","error","addFlightReceivedListener","callback","on","addFlightRemoveListener","addFlightMoveListener"],"sources":["C:/Users/Yuval/OneDrive/المستندات/קורס תכנות/FinalProject/terminal/src/services/signalRService.js"],"sourcesContent":["import * as signalR from \"@microsoft/signalr\";\r\n\r\nconst connection = new signalR.HubConnectionBuilder()\r\n  .withUrl(\"https://localhost:5001/terminalhub\") \r\n  .build();\r\n\r\nconst signalRService = {\r\n  startConnection: async () => {\r\n    try {\r\n      if (connection.state === signalR.HubConnectionState.Disconnected) {\r\n        await connection.start();\r\n        console.log(\"Connected to SignalR hub\");\r\n      } else {\r\n        console.log(\"SignalR connection is already in progress or Server not running.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error connecting to SignalR hub:\", error);\r\n    }\r\n  },\r\n\r\n  addFlightReceivedListener: (callback) => {\r\n    connection.on(\"flightReceived\", callback);\r\n  },\r\n\r\n  addFlightRemoveListener: (callback) => {\r\n    connection.on(\"flightRemove\", callback);\r\n  },\r\n\r\n  addFlightMoveListener: (callback) => {\r\n    connection.on(\"flightMoove\", callback);\r\n  }\r\n};\r\n\r\nexport default signalRService;"],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,oBAAoB;AAE7C,MAAMC,UAAU,GAAG,IAAID,OAAO,CAACE,oBAAoB,CAAC,CAAC,CAClDC,OAAO,CAAC,oCAAoC,CAAC,CAC7CC,KAAK,CAAC,CAAC;AAEV,MAAMC,cAAc,GAAG;EACrBC,eAAe,EAAE,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,IAAIL,UAAU,CAACM,KAAK,KAAKP,OAAO,CAACQ,kBAAkB,CAACC,YAAY,EAAE;QAChE,MAAMR,UAAU,CAACS,KAAK,CAAC,CAAC;QACxBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACzC,CAAC,MAAM;QACLD,OAAO,CAACC,GAAG,CAAC,kEAAkE,CAAC;MACjF;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;EACF,CAAC;EAEDC,yBAAyB,EAAGC,QAAQ,IAAK;IACvCd,UAAU,CAACe,EAAE,CAAC,gBAAgB,EAAED,QAAQ,CAAC;EAC3C,CAAC;EAEDE,uBAAuB,EAAGF,QAAQ,IAAK;IACrCd,UAAU,CAACe,EAAE,CAAC,cAAc,EAAED,QAAQ,CAAC;EACzC,CAAC;EAEDG,qBAAqB,EAAGH,QAAQ,IAAK;IACnCd,UAAU,CAACe,EAAE,CAAC,aAAa,EAAED,QAAQ,CAAC;EACxC;AACF,CAAC;AAED,eAAeV,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}